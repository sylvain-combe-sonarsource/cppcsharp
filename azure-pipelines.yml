trigger: 
- main

jobs:
- job: BuildSonarCppCSharp
  displayName: Build mixed CSharp and Cpp with build-wrapper

  pool:
    vmImage: 'windows-latest'
  variables:
    SonarCloud_Build_Wrapper_url: https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip
    SonarCloud_Net46_Build_Wrapper_url: https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.8.0.52797/sonar-scanner-msbuild-5.8.0.52797-net46.zip
    SonarCloud_Net5_Build_Wrapper_url:  https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.8.0.52797/sonar-scanner-msbuild-5.8.0.52797-net5.0.zip
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    projectSourceDir: 'sonarqube-scanner-msbuild'
    cmd_msbuild: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\msbuild.exe"
 #   ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
 #     branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
 #   ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
 #     branchName: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

  steps:
  - task: PowerShell@2
    displayName: "Use JDK11 by default"
    inputs:
      targetType: 'inline'
      script: |
        $jdkPath = $env:JAVA_HOME_11_X64
        Write-Host "##vso[task.setvariable variable=JAVA_HOME]$jdkPath"


  - task: SonarQubePrepare@5
    inputs:
      SonarQube: 'SYCOLATEST'
      scannerMode: 'MSBuild'
      projectKey: 'cppcsharp'
      projectName: 'cppcsharp'
      projectVersion: '1.0'
      extraProperties: |
        # Additional properties that will be passed to the scanner, 
        # Put one key=value per line, example:
        # sonar.exclusions=**/*.bin
        sonar.verbose=true
        sonar.cfamily.build-wrapper-output=buildWrapperOutputDirectory
        sonar.sourceEncoding=UTF-8
        sonar.exclusions = **/SomeConsoleApplicationTest/**/*,
        Outputs/**/*
        sonar.test.exclusions = **/*


  - task: PowerShell@2
    displayName: 'Download and expand build wrapper'
#    condition: and(succeeded(), eq('${{ parameters.LaunchSonarCppCSharp}}', true))
    enabled: true
    inputs:
      targetType: 'inline'
      script: |
        Invoke-WebRequest -Uri '$(SonarCloud_Build_Wrapper_url)' -OutFile '$(Agent.TempDirectory)\build-wrapper.zip'
        Expand-Archive -Path '$(Agent.TempDirectory)\build-wrapper.zip' -DestinationPath '$(Agent.TempDirectory)/buildWrapper' -Force

  - task: PowerShell@2
    displayName: 'SonarCloud Build with build-wrapper'
#    condition: and(succeeded(), eq('${{ parameters.LaunchSonarCppCSharp}}', true))
    enabled: true
    inputs:
      targetType: 'inline'
      script: |
        & '$(Agent.TempDirectory)\buildWrapper\build-wrapper-win-x86\build-wrapper-win-x86-64.exe' --out-dir buildWrapperOutputDirectory 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\msbuild.exe' '$(Agent.BuildDirectory)\s\sonarqube-scanner-msbuild\CSharpProject\SomeConsoleApplication.sln' /t:Rebuild /nodeReuse:False


  - task: CmdLine@2
    displayName: 'list d:'
    condition: always()
    enabled: true
    inputs:
      script: |
        tree "d:\" /F /A
        pwd

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(agent.builddirectory)/buildWrapperOutputDirectory'
      Contents: '**'
      TargetFolder: '$(Build.SourcesDirectory)/buildWrapperOutputDirectory'

  - task: CmdLine@2
    displayName: 'list d:'
    condition: always()
    enabled: true
    inputs:
      script: |
        tree "d:\" /F /A

  - task: SonarQubeAnalyze@4

